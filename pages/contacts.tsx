import * as React from "react";
import Head from "next/head";
import AppMenu from "@/components/Menu/menu";
import {
  Grid,
  Container,
  TextField,
  FormControl,
  InputLabel,
  MenuItem,
  Button,
} from "@mui/material";

import { Edit } from "@mui/icons-material";
import Table from "@/components/DataGrid/Table";
import DeleteIcon from "@mui/icons-material/Delete";
import Search from "@mui/icons-material/Search";
import Add from "@mui/icons-material/Add";
import Backspace from "@mui/icons-material/Backspace";

import Select, { SelectChangeEvent } from "@mui/material/Select";
import { withAuthSync } from "@/common/auth/auth";
import { getAllContacts, User } from "@/api/contact/api";
import { getDate } from "@/common/format/date";
import { useRouter } from "next/router";

const columns = [
  { value: "Name", size: { xs: 5 } },
  { value: "Birthday", size: { xs: 3 } },
  { value: "Days", size: { xs: 2 } },
];

const Contact = () => {
  const [month, setMonth] = React.useState("");
  const router = useRouter();
  const [contacts, setContacts] = React.useState<{
    values: string[][];
    id: string[];
  }>({
    values: [],
    id: [],
  });
  const handleChange = (event: SelectChangeEvent) => {
    window.localStorage.setItem("test", "1234");
    setMonth(event.target.value);
  };

  const handleSearch = async () => {
    console.log("test");

    const fetchData = async () => {
      let userMap = new Map<number, User[]>([
        [0, []],
        [1, []],
        [2, []],
        [3, []],
      ]);
      const users = await getAllContacts(
        "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjZiOWIxMDE0LTA1YmUtNGQ1MS1hNjk1LTU5ZTJjYzVlYjJiZCIsInVzZXJuYW1lIjoibmNvc3RhbWFnbmEifQ.eejlImtdvVqGUrPTG4ZyTB7q65VypqbGKhVyepd10OU",
        "6b9b1014-05be-4d51-a695-59e2cc5eb2bd",
        "",
        "",
        ""
      );

      console.log(users);
      return users;
    };

    console.log("test start");
    fetchData()
      .then((data) => {
        console.log("data");
        let values: string[][] = [];
        let id: string[] = [];
        for (const c of data) {
          values.push([
            `${c.firstname} ${c.lastname}`,
            getDate(c.birthday),
            `${c.days}`,
          ]);
          id.push(c.id);
        }
        setContacts({
          values,
          id,
        });
      })
      .catch(console.error)
      .finally(() => {
        console.log("end fetch");
      });
    console.log("test end");
  };

  const handleContactEdit = (id: string) => {
    router.push(`/contacts/${id}`);
  };

  const handleContactNew = () => {
    router.push(`/contacts/new`);
  };

  const buttons = [
    {
      size: { xs: 1 },
      color: "primary",
      icon: Edit,
      fun: handleContactEdit,
    },
    {
      size: { xs: 1 },
      color: "error",
      icon: DeleteIcon,
      fun: handleContactEdit,
    },
  ];

  return (
    <>
      <Head>
        <title>Contacts</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppMenu></AppMenu>
      <Container>
        <Grid container spacing={2} marginTop={5}>
          <Grid item xs={12} md={6}>
            <TextField
              id="outlined-basic"
              label="First name"
              variant="outlined"
              fullWidth
            />
          </Grid>

          <Grid item xs={12} md={6}>
            <TextField
              id="outlined-basic"
              label="Last name"
              variant="outlined"
              fullWidth
            />
          </Grid>

          <Grid item xs={12}>
            <FormControl fullWidth>
              <InputLabel id="demo-simple-select-label">Month</InputLabel>
              <Select
                labelId="demo-simple-select-label"
                id="demo-simple-select"
                value={month}
                label="Month"
                onChange={handleChange}
              >
                <MenuItem value={""}>None</MenuItem>
                <MenuItem value={"10"}>Ten</MenuItem>
                <MenuItem value={"20"}>Twenty</MenuItem>
                <MenuItem value={"30"}>Thirty</MenuItem>
              </Select>
            </FormControl>
          </Grid>
          <Grid item xs={12} md={2}>
            <Button
              variant="contained"
              startIcon={<Search />}
              fullWidth
              onClick={handleSearch}
            >
              Search
            </Button>
          </Grid>
          <Grid item xs={12} md={2}>
            <Button
              variant="contained"
              color="warning"
              startIcon={<Backspace />}
              fullWidth
            >
              Clear
            </Button>
          </Grid>
          <Grid item xs={12} md={2}>
            <Button
              variant="contained"
              color="success"
              startIcon={<Add />}
              fullWidth
              onClick={handleContactNew}
            >
              Add
            </Button>
          </Grid>
          <Grid item xs={12}>
            <Table
              columns={columns}
              values={contacts.values}
              id={contacts.id}
              buttons={buttons}
            />
          </Grid>
        </Grid>
      </Container>
    </>
  );
};

export default withAuthSync(Contact);
